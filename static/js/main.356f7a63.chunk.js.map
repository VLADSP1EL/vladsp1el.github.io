{"version":3,"sources":["img/logo.svg","App.js","index.js"],"names":["App","useState","item","setItem","JSON","parse","localStorage","getItem","items","setItems","useEffect","stringify","newItem","trim","includes","id","uuidv4","replace","color","defaultPos","x","y","randomColor","luminosity","alert","deleteNode","filter","random","Random","ru_phrases","className","Helmet","src","logo","alt","list","placeholder","phrases_amount","value","integer","update_phrases","onChange","e","target","onKeyPress","keyCode","which","keyPress","type","onClick","map","index","defaultPosition","onStop","_","data","newArray","updatePos","style","backgroundColor","onTouchStart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.356f7a63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.57e68c1e.svg\";","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid'\nimport { randomColor } from 'randomcolor'\nimport Draggable from 'react-draggable'\nimport { Random, string } from \"random-js\";\nimport { Helmet } from 'react-helmet'\nimport logo from './img/logo.svg'\n\nimport dark from \"./App.css\"\n\n\n\n\n\n\n\n\nfunction App() {\n  const[item, setItem] = useState('')\n  const[items, setItems] = useState(\n    JSON.parse(localStorage.getItem('items')) || []\n  )\n\n    useEffect(() => {\n      localStorage.setItem('items', JSON.stringify(items))\n    }, [items])\n\n   \n   \n    const newItem = () =>{\n      if(item.trim() !== ''){\n        if(item.includes(\"/title\") === true){\n          \n          const newItem = {\n            id:uuidv4(),\n            item: (`(----- ${item.replace('/title','')} -----)`),\n            color:\"#ffffff\",\n            defaultPos:{\n              x: 70,\n              y: -534\n            }\n          }\n          setItems((items) => [...items, newItem])\n          setItem('')\n        }\n        else if(item.includes(\"/debug\") === true){\n     \n          if(item.replace('/debug', '') === \" on\") {\n           \n            setItem('')\n          }\n          if(item.replace('/debug', '') === \" off\") {\n          \n            setItem('')\n          }\n        }\n        else{\n        const newItem = {\n          id:uuidv4(),\n          item,\n          color:randomColor(\n            {\n              luminosity: 'light'\n            }\n          ),\n          defaultPos:{\n            x: 70,\n            y: -534\n          }\n        }\n\n        setItems((items) => [...items, newItem])\n        setItem('')\n      }\n\n      }else{\n        alert(\"Enter something\");\n        setItem('')\n      }\n    }\n\n    \n\n    const deleteNode= (id) =>{\n      setItems(items.filter((item) => item.id !== id))\n    }\n\n    const updatePos = (data, index) =>{\n      let newArray = [...items]\n      newArray[index].defaultPos = {x:data.x, y: data.y}\n      setItems(newArray)\n    }\n\n    const keyPress = (e) => {\n      const code = e.keyCode || e.which\n      if( code === 13 ){\n        newItem()\n      }\n    }\n\n    const random = new Random();\n \n    // FIXME: Фразы меняются только при запуске страницы или при добавлении задачи\n\n    var ru_phrases = [\n      9,\n      'Покушать',\n      'Сделать домашнее задание',\n      'Помыть посуду',\n      'Убрать в комнате',\n      'Встретить Настю с работы',\n      'Послушать музыку',\n      'Опубликовать видео в TikTok',\n      'Отвести сына в садик',\n      'Написать симфонию'\n      \n    ];\n\n    const update_phrases = (phrases_amount) => {\n      const value = random.integer(1, 8);\n      return ru_phrases[value];\n    }\n\n  \n    // TODO: Плавная смена темы\n\n    // TODO: Небольшой наклон блока при перетаскивании\n\n    \n\n  return (\n    <div className=\"App\">\n        <Helmet>\n          <title>{ \"ToDo Bear - beta\" }</title>\n        </Helmet>\n        <div className='topnav'>\n          <div className='logotype'>\n      <img className='logo' src={logo} alt={\"logo\"}/> \n      </div>\n      <div className='wrapper'>\n        <input list='comands'placeholder={update_phrases(ru_phrases[0])} \n        value={item}\n        onChange={(e) => setItem(e.target.value)} \n        onKeyPress={(e) => keyPress(e)}\n        type=\"text\"/>\n        \n        <datalist id='comands' className='debug'>\n          <option>/title</option>\n          <option>/debug on</option>\n          <option>/debug off</option>\n        </datalist> \n        <button className=\"enter\" onClick={newItem}>Создать задачу</button>\n      \n      </div>\n      </div>\n   \n     \n  {\n    items.map((item, index)=>{\n      return(\n        <Draggable \n          key={index}\n          defaultPosition={item.defaultPos}\n          onStop={(_, data) => {\n            updatePos(data, index)\n          }}\n        >\n          <div className=\"todo__item\" style={{backgroundColor:item.color}}>\n           <a> {`${item.item}`}</a><hr id=\"debug\"></hr>\n            <button id=\"delete\" className=\"delete\"\n              onClick={()=>deleteNode(item.id)}\n              onTouchStart={()=>deleteNode(item.id)}\n            >\n              X\n            </button>\n            \n            <br></br>\n         <a  id=\"debug\" >   {`ID: ${item.id}`}</a>\n          <br  id=\"debug\"></br>\n           <a id=\"debug\"> {`posX: ${item.defaultPos.x} | posY: ${item.defaultPos.y}`}</a>\n          </div>\n          \n        </Draggable>\n\n          \n      )\n    })\n  }\n\n    </div>\n    \n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}